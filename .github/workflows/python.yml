name: Python Tests

on: [push, pull_request]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  test:
    name: Python tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Set JAVA_HOME
        run: echo "JAVA_HOME=$(dirname $(dirname $(readlink -f $(which java))))" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set environment variables
        run: |
          echo "DM_API_ACCOUNT=${{ secrets.DM_API_ACCOUNT }}" >> $GITHUB_ENV
          echo "MAILHOG=${{ secrets.MAILHOG }}" >> $GITHUB_ENV
          echo "USER_LOGIN=${{ secrets.USER_LOGIN }}" >> $GITHUB_ENV
          echo "USER_PASSWORD=${{ secrets.USER_PASSWORD }}" >> $GITHUB_ENV
          echo "TG_TOKEN=${{ secrets.TG_TOKEN }}" >> $GITHUB_ENV
          echo "TG_CHAT_ID=${{ secrets.TG_CHAT_ID }}" >> $GITHUB_ENV

      - name: Create config file from template
        run: |
          envsubst < config/stg.yaml > config/ci.yaml
        env:
          DM_API_ACCOUNT: ${{ secrets.DM_API_ACCOUNT }}
          MAILHOG: ${{ secrets.MAILHOG }}
          USER_LOGIN: ${{ secrets.USER_LOGIN }}
          USER_PASSWORD: ${{ secrets.USER_PASSWORD }}
          TG_TOKEN: ${{ secrets.TG_TOKEN }}
          TG_CHAT_ID: ${{ secrets.TG_CHAT_ID }}

      - name: Run tests
        run: |
          export JAVA_HOME=$JAVA_HOME
          pytest tests \
            --env=ci \
            --alluredir=allure-results \
            --disable-warnings
        continue-on-error: true

      - name: Run coverage
        if: ${{ always() }}
        run: python -m packages.notifier.bot

      - name: Archive allure results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results
          retention-days: 1

  generate-report:
    name: Generate report
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/setup-java@v4
        with:
          distribution: 'microsoft'
          java-version: '17'

      - name: Install Allure
        run: |
          sudo wget https://github.com/allure-framework/allure2/releases/download/2.32.0/allure-2.32.0.tgz
          sudo tar -xzvf allure-2.32.0.tgz -C /opt/
          sudo ln -s /opt/allure-2.32.0/bin/allure /usr/bin/allure

      - name: Download allure results
        uses: actions/download-artifact@v4  # Correct version for downloading artifacts
      - run: allure generate -c ./allure-results -o _site
      - name: Store report
        uses: actions/upload-artifact@v4
        with:
          name: _site
          path: _site
          retention-days: 1

  publish-report:
    name: Publish report
    runs-on: ubuntu-latest
    needs: generate-report
    steps:
      - uses: actions/checkout@v4

      - name: Download site report
        uses: actions/download-artifact@v4
        with:
          name: _site
          path: _site

      - name: Upload pages artifact
        uses: actions/upload-pages-artifact@v3

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - run: echo "https://Uroboric.github.io/dm_api_tests/"